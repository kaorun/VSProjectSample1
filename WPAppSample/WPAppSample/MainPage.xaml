<phone:PhoneApplicationPage
    x:Class="WPAppSample.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:phone="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone"
    xmlns:shell="clr-namespace:Microsoft.Phone.Shell;assembly=Microsoft.Phone"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    d:DataContext="{d:DesignData SampleData/MainViewModelSampleData.xaml}"
    FontFamily="{StaticResource PhoneFontFamilyNormal}"
    FontSize="{StaticResource PhoneFontSizeNormal}"
    Foreground="{StaticResource PhoneForegroundBrush}"
    SupportedOrientations="Portrait"  Orientation="Portrait"
    shell:SystemTray.IsVisible="True">

    <!--LayoutRoot は、すべてのページ コンテンツが配置されるルート グリッドです-->
    <Grid x:Name="LayoutRoot" Background="Transparent">

        <!-- ローカライズに関する注:
            表示された文字列をローカライズするには、その値を、アプリのニュートラル言語
            リソース ファイル (AppResources.resx) 内の適切な名前のキーにコピーしてから、
            属性の引用符間のハードコーディングされたテキスト値を、パスがその文字列名を
            指しているバインド句と置き換えます。

            例:

                Text="{Binding Path=LocalizedResources.ApplicationTitle, Source={StaticResource LocalizedStrings}}"

            このバインドは、テンプレートの "ApplicationTitle" という文字列リソースを指します。

            [プロジェクトのプロパティ] タブでサポートされている言語を追加すると、
            新しい resx ファイルが、UI 文字列の翻訳された値を含む言語ごとに作成
            されます。これらの例にあるバインドにより、属性の値が、実行時に
            アプリの CurrentUICulture と一致する .resx ファイルから描画されます。
            
         -->

        <!--ピボット コントロール-->
        <phone:Pivot Title="マイ アプリケーション">
            <!--ピボット アイテム 1-->
            <phone:PivotItem Header="first">
                <!--テキストの折り返しを行う 2 行リスト-->
                <phone:LongListSelector Margin="0,0,-12,0" ItemsSource="{Binding Items}">
                    <phone:LongListSelector.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Margin="0,0,0,17">
                                <TextBlock Text="{Binding LineOne}" TextWrapping="Wrap" Style="{StaticResource PhoneTextExtraLargeStyle}"/>
                                <TextBlock Text="{Binding LineTwo}" TextWrapping="Wrap" Margin="12,-6,12,0" Style="{StaticResource PhoneTextSubtleStyle}"/>
                            </StackPanel>
                        </DataTemplate>
                    </phone:LongListSelector.ItemTemplate>
                </phone:LongListSelector>
            </phone:PivotItem>

            <!--ピボット アイテム 2-->
            <phone:PivotItem Header="second">
                <!--テキストの折り返しを行わない 2 行リスト-->
                <phone:LongListSelector Margin="0,0,-12,0" ItemsSource="{Binding Items}">
                    <phone:LongListSelector.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Margin="0,0,0,17">
                                    <TextBlock Text="{Binding LineOne}" TextWrapping="NoWrap" Margin="12,0,0,0" Style="{StaticResource PhoneTextExtraLargeStyle}"/>
                                    <TextBlock Text="{Binding LineThree}" TextWrapping="NoWrap" Margin="12,-6,0,0" Style="{StaticResource PhoneTextSubtleStyle}"/>
                                </StackPanel>
                            </DataTemplate>
                    </phone:LongListSelector.ItemTemplate>
                </phone:LongListSelector>
            </phone:PivotItem>
        </phone:Pivot>

        <!--コメントを解除してアライメント グリッドを表示し、コントロールが共通の
            境界に整列されるようにします。イメージの上余白は -32px で、システム 
            トレイを占有します。システム トレイが非表示になっている場合は、これを
            0 に設定します (または余白をすべて削除します)。

            製品を出荷する前に、この XAML とイメージ自体を削除してください。-->
        <!--<Image Source="/Assets/AlignmentGrid.png" VerticalAlignment="Top" Height="800" Width="480" Margin="0,-32,0,0" Grid.Row="0" IsHitTestVisible="False" />-->
    </Grid>

</phone:PhoneApplicationPage>